% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svr-functions.R
\name{svmInference}
\alias{svmInference}
\title{l1-SVR regression rankscore test}
\usage{
svmInference(Xr, Zr, Y, U, epsilon, lambda = 0, solver = "gurobi",
  intercept = TRUE, nullGamma = 0, heteroskedastic = FALSE,
  hc = 0.5, kappa = 1)
}
\arguments{
\item{Xr}{Matrix of covariates, excluding the covariate of interest
for which inference is being conducted.}

\item{Zr}{Vector of the covariate of interest for which inference
is being conducted.}

\item{Y}{Vector of the outcome.}

\item{U}{Vector of the residuals.}

\item{epsilon}{Real scalar, bandwidth for SVR.}

\item{lambda}{Real scalar, parameter for SVR that scales the
penalty.}

\item{solver}{Character, name of the linear programming package in
R used to obtain the bounds on the treatment effect. The
function supports \code{'gurobi'}, \code{'cplexapi'},
\code{'lpsolveapi'}. The name of the solver should be provided
with quotation marks.}

\item{intercept}{Boolean, set to \code{TRUE} if an intercept should
be included in the regression.}

\item{nullGamma}{Real scalar, the coefficient on \code{Zr} under
the null.}

\item{heteroskedastic}{Boolean, indicate whether data has
heteroskedastic errors. If set to \code{TRUE}, then density
estimation is performed when conducting inference.}

\item{hc}{Scalar determing the quantiles of a standard normal
distribution used to define the bandwidth for nonparametric
density estimation. See
\href{https://econpapers.repec.org/paper/attwimass/8818.htm}{Powell
(1991)} and
\href{https://yuehaob.github.io/assets/svml1.pdf}{Bai
et. al. (2021)} for details.}

\item{kappa}{Scalar that directly scales the bandwdith for
nonparametric density estimation. See
\href{https://econpapers.repec.org/paper/attwimass/8818.htm}{Powell
(1991)} and
\href{https://yuehaob.github.io/assets/svml1.pdf}{Bai
et. al. (2021)} for details.}
}
\value{
A p-value.
}
\description{
This function performs the l1-SVR regression rankscore test for a single coefficient, and returns the p-value.
}
